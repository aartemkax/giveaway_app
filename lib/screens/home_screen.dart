// lib/screens/home_screen.dart

import 'dart:math';
import 'package:flutter/material.dart';
import '../models/participant.dart';
import '../services/participants_service.dart';
import '../widgets/participant_card.dart';

class HomeScreen extends StatefulWidget {
  // ‚úèÔ∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ super.key –∑–∞–º—ñ—Å—Ç—å {Key? key}: super(key: key)
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  final _urlCtrl = TextEditingController(
    text: 'https://www.instagram.com/p/DJC7uo4APmr/',
  );
  final _countCtrl = TextEditingController(text: '1');

  // –ú–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ–±–∏–¥–≤–∞ –ø–æ–ª—è ‚Äî participants –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –≤—Å—ñ—Ö —É—á–∞—Å–Ω–∏–∫—ñ–≤,
  // winners  ‚Äî –≤–∏–±—Ä–∞–Ω–∏—Ö. –¢–æ–∂ –≤–æ—Ä–Ω—ñ–Ω–≥ –ø—Ä–æ unused_field –∑–Ω–∏–∫–Ω–µ.
  List<Participant> _winners = [];

  bool _loading = false;

  Future<void> _refreshAndChoose() async {
    setState(() => _loading = true);
    try {
      final unique =
          (await fetchParticipants(_urlCtrl.text.trim())).toSet().toList();

      final rnd = Random();
      final n = int.tryParse(_countCtrl.text) ?? 1;
      unique.shuffle(rnd);

      if (!mounted) return;
      setState(() {
        _winners = unique.take(n.clamp(1, unique.length)).toList();
      });
    } catch (e) {
      if (mounted) {
        ScaffoldMessenger.of(
          context,
        ).showSnackBar(SnackBar(content: Text('–ü–æ–º–∏–ª–∫–∞: $e')));
      }
    } finally {
      if (mounted) setState(() => _loading = false);
    }
  }

  @override
  Widget build(BuildContext ctx) {
    return Scaffold(
      appBar: AppBar(title: const Text('üéâ Instagram Giveaway')),
      body: Center(
        child:
            _loading
                ? const CircularProgressIndicator()
                : SingleChildScrollView(
                  padding: const EdgeInsets.all(20),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      TextField(
                        controller: _urlCtrl,
                        decoration: const InputDecoration(
                          labelText: '–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø–æ—Å—Ç',
                          border: OutlineInputBorder(),
                        ),
                      ),
                      const SizedBox(height: 12),
                      TextField(
                        controller: _countCtrl,
                        keyboardType: TextInputType.number,
                        decoration: const InputDecoration(
                          labelText: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤',
                          border: OutlineInputBorder(),
                        ),
                      ),
                      const SizedBox(height: 20),
                      ElevatedButton.icon(
                        onPressed: _refreshAndChoose,
                        icon: const Icon(Icons.refresh),
                        label: const Text('–û–Ω–æ–≤–∏—Ç–∏ —ñ –æ–±—Ä–∞—Ç–∏'),
                        style: ElevatedButton.styleFrom(
                          minimumSize: const Size.fromHeight(50),
                        ),
                      ),
                      const SizedBox(height: 20),
                      ..._winners.map((w) => ParticipantCard(w)),
                    ],
                  ),
                ),
      ),
    );
  }
}
